apply from: "$rootDir/gradle/dependencies.gradle"

dependencies {
  implementation project(':ohara-common')
  implementation project(':ohara-client')
  implementation project(':ohara-kafka')
  implementation project(':ohara-agent')
  /**
   * The Hadoop use jersey 1.x, but the Kafka use jersey 2.x so jar conflict
   *
   * Solve running Kafka Connect mini cluster failed. OHARA-103
   */
  implementation (libs.hadoopCommon) {
    exclude group: 'com.sun.jersey', module: 'jersey-core'
    exclude group: 'com.sun.jersey', module: 'jersey-json'
    exclude group: 'com.sun.jersey', module: 'jersey-servlet'
    exclude group: 'com.sun.jersey', module: 'jersey-server'
  }
  implementation (libs.hadoopHDFS) {
    exclude group: 'com.sun.jersey', module: 'jersey-core'
    exclude group: 'com.sun.jersey', module: 'jersey-json'
    exclude group: 'com.sun.jersey', module: 'jersey-servlet'
    exclude group: 'com.sun.jersey', module: 'jersey-server'
  }
  implementation libs.kafkaClient
  implementation libs.kafkaConnectFile
  implementation libs.kafkaConnectRuntime
  implementation libs.scala
  implementation libs.scalaLogging
  implementation libs.slf4jApi
  implementation libs.slf4jlog4j
  implementation libs.akkaStream
  implementation libs.sprayJson
  testImplementation project(':ohara-testing-util')
  testImplementation project(":ohara-testing-util").sourceSets.test.output
  testImplementation project(":ohara-common").sourceSets.test.output
  testImplementation libs.scalatest
  testImplementation libs.mockito
  testImplementation libs.junit
}

/**
 * run a configurator based on kafka cluster
 */
task runConfigurator(type: JavaExec, dependsOn: 'classes') {
  description 'run a configurator. You can use -Phost and -Pport to change the address and port of configurator.' +
          'Also, you can assign -Pbrokers, -Pworkers, -Ptopic, -Ppartitions, and -Preplications to run the configurator on truly kafka'

  classpath = sourceSets.main.runtimeClasspath
  main = "com.island.ohara.configurator.Configurator"

  def inputs = []
  if(project.hasProperty('hostname')) {
    inputs << "--hostname"
    inputs << project.getProperty("hostname")
  }
  if(project.hasProperty('port')) {
    inputs << "--port"
    inputs << project.getProperty("port")
  }
  if(project.hasProperty('brokers')) {
    inputs << "--brokers"
    inputs << project.getProperty('brokers')
  }
  if(project.hasProperty('partitions')) {
    inputs << "--partitions"
    inputs << project.getProperty('partitions')
  }
  if(project.hasProperty('replications')) {
    inputs << "--replications"
    inputs << project.getProperty('replications')
  }
  if(project.hasProperty('workers')) {
    inputs << "--workers"
    inputs << project.getProperty('workers')
  }
  args = inputs
}

