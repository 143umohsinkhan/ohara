/*
 * Copyright 2019 is-land
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply from: "$rootDir/gradle/dependencies.gradle"
apply plugin: 'java-library-distribution'
dependencies {
  // using compile enable java-library-distribution to include all dependencies in binary file
  implementation project(':ohara-client')
  implementation project(':ohara-common')
  implementation project(':ohara-configurator')
  implementation project(':ohara-connector')
  implementation project(':ohara-kafka')
  implementation project(':ohara-metrics')
  implementation project(':ohara-shabondi')
  implementation project(':ohara-streams')
  implementation libs.akkaSlf4j
  testImplementation project(path: ':ohara-agent', configuration: 'tests')
  testImplementation project(path: ':ohara-client', configuration: 'tests')
  testImplementation project(path: ':ohara-common', configuration: 'tests')
  testImplementation project(path: ':ohara-configurator', configuration: 'tests')
  testImplementation project(path: ':ohara-connector', configuration: 'tests')
  testImplementation project(path: ':ohara-it', configuration: 'tests')
  testImplementation project(path: ':ohara-kafka', configuration: 'tests')
  testImplementation project(path: ':ohara-metrics', configuration: 'tests')
  testImplementation project(path: ':ohara-shabondi', configuration: 'tests')
  testImplementation project(path: ':ohara-streams', configuration: 'tests')
  testImplementation project(path: ':ohara-testing-util', configuration: 'tests')
  testImplementation libs.scalaLogging
  testImplementation libs.akkaHttpTestKit
  testImplementation libs.scalatest
  testImplementation libs.junit
  testImplementation libs.kafkaStreams
  testImplementation libs.mockitoAll
  testImplementation libs.ftpServer
  testImplementation libs.commonsLang
}

task uberJar(type: Jar) {
  classifier = 'uber'
  // TODO: should we exclude kafka-related jars?
  from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
  with jar
}

distributions {
  main {
    baseName = "ohara"
    contents {
      exclude "ohara-assembly-${version}.jar"
      into("conf") {
        // ref to root module
        from { "$projectDir/../conf" }
      }
      into("bin") {
        // ref to root module
        from { "$projectDir/../bin" }
        fileMode 0755
      }
    }
  }
}
