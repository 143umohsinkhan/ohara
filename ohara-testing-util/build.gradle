apply from: "$rootDir/gradle/dependencies.gradle"
apply plugin: 'scala'

dependencies {
  implementation project(':ohara-common')
  implementation libs.scala
  implementation libs.kafkaCore
  implementation libs.kafkaConnectJson
  implementation libs.kafkaConnectRuntime
  implementation libs.mysql
  implementation libs.embeddedsql
  implementation libs.ftpServer
  implementation libs.scalaLogging
  implementation libs.slf4jApi
  implementation libs.slf4jlog4j
  /**
   * The Hadoop use jersey 1.x, but the Kafka use jersey 2.x so jar conflict
   *
   * Solve running Kafka Connect mini cluster failed. OHARA-103
   */
  implementation (libs.hadoopCommon) {
    exclude group: 'com.sun.jersey', module: 'jersey-core'
    exclude group: 'com.sun.jersey', module: 'jersey-json'
    exclude group: 'com.sun.jersey', module: 'jersey-servlet'
    exclude group: 'com.sun.jersey', module: 'jersey-server'
  }
  implementation (libs.hadoopHDFS) {
    exclude group: 'com.sun.jersey', module: 'jersey-core'
    exclude group: 'com.sun.jersey', module: 'jersey-json'
    exclude group: 'com.sun.jersey', module: 'jersey-servlet'
    exclude group: 'com.sun.jersey', module: 'jersey-server'
  }
  testImplementation libs.scalatest
  testImplementation libs.mockito
  testImplementation libs.junit
  testImplementation project(':ohara-common').sourceSets.test.output
}

/**
 * run ohara
 */
task runKafka(type: JavaExec, dependsOn: 'classes') {
  description 'start a local broker cluster'
  classpath = sourceSets.main.runtimeClasspath
  main = "com.island.ohara.integration.OharaTestUtil"
  String ttl = 9999 // seconds
  if(project.hasProperty('ttl')) ttl = "${project.getProperty('ttl')}"
  args = Arrays.asList("--ttl", ttl)
}