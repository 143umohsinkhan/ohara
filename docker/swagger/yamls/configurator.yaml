openapi: "3.0.0"
info:
  title: "OHARA Configurator"
  description: "OHARA Configurator API - Swagger version"
  version: "0.2-SNAPSHOT"
  contact:
    name: "The God - Chia7712"
    email: "chia7712@is-land.com.tw"
basePath: "/API/v0"
tags:
  - name: "Topics"
    description: "topic crud"
    externalDocs:
      description: "Google Doc"
      url: "https://ppt.cc/fhYKUx"
  - name: "StreamApp List"
    description: "StreamApp List Page Operations"
schemes:
  - "http"
paths:
  /topics:
    get:
      tags:
        - "Topics"
      summary: "get all topics"
      description: "get all topics"
      operationId: "getTopics"
      produces:
        - "application/json"
      responses:
        200:
          description: topic response
          schema:
            type: array
            items:
              $ref: "#/definitions/Topic"
        400:
          $ref: "#/responses/Error"
    post:
      tags:
        - "Topics"
      summary: "add a topic"
      description: "add a topic to broker"
      operationId: "addTopic"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      requestBody:
        description: "topic request"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/TopicRequest"
      responses:
        200:
          $ref: "#/definitions/Topic"
        400:
          $ref: "#/responses/Error"

  /topics/{topicId}:
    get:
      tags:
        - "Topics"
      summary: "find topic by ID"
      description: "Returns a single topic"
      operationId: "getTopicById"
      parameters:
        - $ref: "#/parameters/TopicId"
      responses:
        200:
          $ref: "#/definitions/Topic"
        400:
          $ref: "#/responses/Error"
    put:
      tags:
        - "Topics"
      summary: "Updates topic by ID"
      description: "update a single topic"
      operationId: "updateTopicById"
      consumes:
        - "application/json"
      requestBody:
        description: "topic request"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/TopicRequest"
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/TopicId"
      responses:
        200:
          $ref: "#/definitions/Topic"
        400:
          $ref: "#/responses/Error"

    delete:
      tags:
        - "Topics"
      summary: "Deletes a topic"
      description: "delete topic by id"
      operationId: "deleteTopic"
      parameters:
        - $ref: "#/parameters/TopicId"
      responses:
        200:
          $ref: "#/definitions/Topic"
        400:
          $ref: "#/responses/Error"

  /stream/jars/{pipelineId}:
    get:
      tags:
        - "StreamApp List"
      summary: "Get list by pipeline id"
      description: "return a list of uploaded streamApp jars"
      operationId: "getStreamList"
      produces:
        - "application/json"
        - "application/xml"
      parameters:
        - in: "path"
          name: "pipelineId"
          description: "ID of pipeline to query"
          required: true
          schema:
            type: "string"
      responses:
        200:
          description: "successful streamApp list operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/StreamJar"
    post:
      tags:
        - "StreamApp List"
      summary: "Upload jars by pipeline id"
      consumes:
        - "multipart/form-data"
      description: "upload streamApp jars"
      operationId: "postStreamList"
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: "object"
              properties:
                streamapp:
                  type: "array"
                  items:
                    type: "string"
                    format: "binary"
      responses:
        200:
          description: "successful streamApp list operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/StreamJar"
        400:
          $ref: "#/responses/Error"
  /stream/jars/{id}:
    delete:
      tags:
      - "StreamApp List"
      summary: "Delete jar by streamApp id"
      description: "delete the specific streamApp jar"
      operationId: "deleteStreamList"
      parameters:
        - in: "path"
          name: "id"
          description: "ID of streamApp to delete"
          required: true
          schema:
            type: "string"
      responses:
        200:
          description: "successful streamApp list operation"
          schema:
            $ref: "#/definitions/StreamJar"
        400:
          $ref: "#/responses/Error"
    put:
      tags:
      - "StreamApp List"
      summary: "Update jar by streamApp id"
      description: "update configuration of specific streamApp jars"
      operationId: "putStreamList"
      requestBody:
        description: "The update request information"
        content:
          application/json:
            schema:
              type: "object"
              properties:
                jarName:
                  type: "string"
              example:
                jarName: "new-example.jar"

      parameters:
        - in: "path"
          name: "id"
          description: "ID of streamApp to update"
          required: true
          schema:
            type: "string"
      responses:
        200:
          description: "successful streamApp list operation"
          schema:
            $ref: "#/definitions/StreamJar"
        400:
          $ref: "#/responses/Error"

parameters:
  TopicId:
    name: "topicId"
    in: "path"
    description: " topic id"
    required: true
    schema:
      type: "string"

responses:
  Topic:
    description: topic response
    schema:
      $ref: "#/definitions/Topic"
  Error:
    description: bad request
    schema:
      $ref: "#/definitions/Error"

definitions:
  Topic:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      numberOfPartitions:
        type: "integer"
        format: "int32"
      numberOfReplications:
        type: "integer"
        format: "int16"
      lastModified:
        type: "integer"
        format: "int64"
  TopicRequest:
    type: "object"
    properties:
      name:
        type: "string"
      numberOfPartitions:
        type: "integer"
        format: "int32"
      numberOfReplications:
        type: "integer"
        format: "int16"
  StreamJar:
    type: "object"
    properties:
      id:
        type: "string"
      jarName:
        type: "string"
      lastModified:
        type: "integer"
        format: "int64"
  Error:
    type: "object"
    properties:
      message:
        type: "string"
      code:
        type: "string"
      stack:
        type: "string"

externalDocs:
  description: "Original Google Doc"
  url: "https://ppt.cc/fhYKUx"