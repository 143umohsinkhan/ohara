openapi: "3.0.0"
info:
  title: "OHARA Configurator"
  description: "OHARA Configurator API - Swagger version"
  version: "0.2-SNAPSHOT"
  contact:
    name: "The God - Chia7712"
    email: "chia7712@is-land.com.tw"
servers:
- url: "/API/v0"
externalDocs:
  description: "Original Google Doc"
  url: "https://ppt.cc/fhYKUx"
tags:
- name: "Topics"
  description: "topic crud"
  externalDocs:
    description: "Google Doc"
    url: "https://ppt.cc/fhYKUx"
- name: "StreamApp List"
  description: "StreamApp List Page Operations"
- name: "StreamApp Property"
  description: "StreamApp Property Page Operations"
paths:
  /topics:
    get:
      tags:
      - "Topics"
      summary: "get all topics"
      description: "get all topics"
      operationId: "getTopics"
      responses:
        200:
          description: "topic response"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Topic"
        400:
          description: "error response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Topic"
    post:
      tags:
      - "Topics"
      summary: "add a topic"
      description: "add a topic to broker"
      operationId: "addTopic"
      requestBody:
        description: "topic request"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TopicRequest"
      responses:
        200:
          description: "topic response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Topic"
        400:
          description: "error response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /topics/{topicId}:
    get:
      tags:
      - "Topics"
      summary: "find topic by ID"
      description: "Returns a single topic"
      operationId: "getTopicById"
      parameters:
      - $ref: "#/components/parameters/TopicId"
      responses:
        200:
          description: "topic response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Topic"
        400:
          description: "error response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      tags:
      - "Topics"
      summary: "Updates topic by ID"
      description: "update a single topic"
      operationId: "updateTopicById"
      requestBody:
        description: "topic request"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TopicRequest"
      parameters:
      - $ref: "#/components/parameters/TopicId"
      responses:
        200:
          description: "topic response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Topic"
        400:
          description: "error response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      tags:
      - "Topics"
      summary: "Deletes a topic"
      description: "delete topic by id"
      operationId: "deleteTopic"
      parameters:
      - $ref: "#/components/parameters/TopicId"
      responses:
        200:
          description: "topic response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Topic"
        400:
          description: "error response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /stream/jars/{pipelineId}:
    get:
      tags:
      - "StreamApp List"
      summary: "Get list by pipeline id"
      description: "return a list of uploaded streamApp jars"
      operationId: "getStreamList"
      parameters:
      - in: "path"
        name: "pipelineId"
        description: "ID of pipeline to query"
        required: true
        schema:
          type: "string"
      responses:
        200:
          description: "successful streamApp list operation"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/StreamListResponse"
    post:
      tags:
      - "StreamApp List"
      summary: "Upload jars by pipeline id"
      description: "upload streamApp jars"
      operationId: "postStreamList"
      parameters:
      - in: "path"
        name: "pipelineId"
        description: "ID of pipeline to query"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: "object"
              properties:
                streamapp:
                  type: "array"
                  items:
                    type: "string"
                    format: "binary"
      responses:
        200:
          description: "successful streamApp list operation"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/StreamListResponse"
        400:
          description: "error response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /stream/jars/{id}:
    delete:
      tags:
      - "StreamApp List"
      summary: "Delete jar by streamApp id"
      description: "delete the specific streamApp jar"
      operationId: "deleteStreamList"
      parameters:
      - in: "path"
        name: "id"
        description: "ID of streamApp to delete"
        required: true
        schema:
          type: "string"
      responses:
        200:
          description: "successful streamApp list operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StreamListResponse"
        400:
          description: "error response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      tags:
      - "StreamApp List"
      summary: "Update jar by streamApp id"
      description: "update configuration of specific streamApp jars"
      operationId: "putStreamList"
      requestBody:
        description: "The update request information"
        content:
          application/json:
            schema:
              type: "object"
              properties:
                jarName:
                  type: "string"
              example:
                jarName: "new-example.jar"
      parameters:
      - in: "path"
        name: "id"
        description: "ID of streamApp to update"
        required: true
        schema:
          type: "string"
      responses:
        200:
          description: "successful streamApp list operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StreamListResponse"
        400:
          description: "error response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /stream/property/{id}:
    get:
      tags:
      - "StreamApp Property"
      summary: "Get properties by streamApp id"
      description: "return the specific streamApp configuration"
      operationId: "getStreamProperty"
      parameters:
      - in: "path"
        name: "id"
        description: "ID of streamApp to get"
        required: true
        schema:
          type: "string"
      responses:
        200:
          description: "successful streamApp property operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StreamPropertyResponse"
        400:
          description: "error response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      tags:
      - "StreamApp Property"
      summary: "Update properties by streamApp id"
      description: "update configuration of specific streamApp"
      operationId: "putStreamProperty"
      requestBody:
        description: "The request properties"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StreamPropertyRequest"
      parameters:
      - in: "path"
        name: "id"
        description: "ID of streamApp to update"
        required: true
        schema:
          type: "string"
      responses:
        200:
          description: "successful streamApp list operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StreamPropertyResponse"
        400:
          description: "error response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    Topic:
      type: "object"
      properties:
        id:
          type: "string"
        name:
          type: "string"
        numberOfPartitions:
          type: "integer"
          format: "int32"
        numberOfReplications:
          type: "integer"
          format: "int16"
        lastModified:
          type: "integer"
          format: "int64"
    TopicRequest:
      type: "object"
      properties:
        name:
          type: "string"
        numberOfPartitions:
          type: "integer"
          format: "int32"
        numberOfReplications:
          type: "integer"
          format: "int16"
    StreamListResponse:
      type: "object"
      properties:
        id:
          type: "string"
        jarName:
          type: "string"
        lastModified:
          type: "integer"
          format: "int64"
    StreamPropertyRequest:
      type: "object"
      properties:
        name:
          type: "string"
        fromTopics:
          type: "array"
          items:
            type: "string"
        toTopics:
          type: "array"
          items:
            type: "string"
        instances:
          type: "integer"
    StreamPropertyResponse:
      type: "object"
      properties:
        id:
          type: "string"
        jarName:
          type: "string"
        name:
          type: "string"
        fromTopics:
          type: "array"
          items:
            type: "string"
        toTopics:
          type: "array"
          items:
            type: "string"
        instances:
          type: "integer"
        lastModified:
          type: "integer"
          format: "int64"
    Error:
      type: "object"
      properties:
        message:
          type: "string"
        code:
          type: "string"
        stack:
          type: "string"
  parameters:
    TopicId:
      name: "topicId"
      in: "path"
      description: " topic id"
      required: true
      schema:
        type: "string"